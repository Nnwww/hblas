language: haskell


env:
 - GHCVER=7.6.3 CABALVER=1.16
 - GHCVER=7.8.3 CABALVER=1.18
 - GHCVER=head  CABALVER=head

matrix:
  allow_failures:
   - env: GHCVER=head





# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install libblas-dev liblapack-dev
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
 - cabal --version

install:
 - sudo /opt/ghc/$GHCVER/bin/ghc-pkg recache
 - /opt/ghc/$GHCVER/bin/ghc-pkg recache --user
 - cabal update
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test  --show-details=always
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - function install_from_tarball {
   export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   if [ -f "dist/$SRC_TGZ" ]; then
      cabal install "dist/$SRC_TGZ";
   else
      echo "expected 'dist/$SRC_TGZ' not found";
      exit 1;
   fi
   }
 - install_from_tarball



notifications:
  email: false
  irc:
    channels:
      - "irc.freenode.org#numerical-haskell"
      - "irc.freenode.org#numerical"
      - "irc.freenode.org#wellposed"
    skip_join: true
    template:
      - "\x0313 hBLAS \x03/\x0306%{branch}\x03 \x0314%{commit}\x03 %{build_url} %{message}"
